#THE SLEEPING BARBER
In [2]:
#CARLOS BERNAL GARCÍA
In [ ]:
import time
import random
from multiprocessing import Process, Queue, cpu_count


#FUNCIÓN BARBERO
def barber(queue):
    while True:
        queue.get()
        print("Barber is cutting hair")
        time.sleep(random.randint(10, 25)) # Tiempo que tarda en cortar el pelo

#FUNCIÓN BARBERO     
def customer(queue):
	while True:
	    print("Customer in waiting room")
	    queue.put('Work')
	    time.sleep(random.randint(1, 3)) # Tiempo para que un nuevo cliente entre a la tienda

#CLASS BARBERSHOP - CONTROLADOR
class Manager:
    def __init__(self):
        self.queue = Queue()
        self.NUMBER_OF_PROCESSES = cpu_count()

    def start(self):
        self.workers = [Process(target=barber, args=(self.queue,)) for i in range(self.NUMBER_OF_PROCESSES)]
        for w in self.workers:
            w.start()

        customer(self.queue)

    def stop(self):
        self.queue.put(None)
        for i in range(self.NUMBER_OF_PROCESS):
            self.workers[i].join()
        self.queue.close()


Manager().start()
